{"chunk_id": "test.md_1", "chunk_content": "<img src=\"https://www.runoob.com/wp-content/uploads/2013/11/python.jpg\">\n<center>图 1 Python Logo</center>", "metadata": {"chunk_type": "image", "title_level_1": "1 Python 简介", "chunk_summary": "图片展示了Python编程语言的Logo，由两个相互环绕的字母“p”组成。", "file_id": "test.md", "file_summary": "Python 是一种语法优雅简洁的编程语言，易于编写和阅读，简化原型开发和小型任务实现，并拥有强大的标准库和跨平台支持。它支持多种数据类型、面向对象编程，并提供高级特性如生成器和自动内存管理。Python的设计哲学强调可读性、显式性以及实用性，并持续进行版本更新，近期重要的发布节点包括2023年10月2日（Python 3.12.0 和 3.11.6）和 2023年8月24日，涵盖了 3.9 到 3.12 的系列版本。"}}
{"chunk_id": "test.md_2", "chunk_content": "- 优雅的语法，编写和阅读都很简单；\n- 简单好用，轻松写程序。这个特点让 Python 做以下工作很方便：开发一个原型或其他特定的小任务，而不用太费劲维护；\n- 内置庞大的标准库，包含常见的编程任务，比如连接网页服务器，用正则表达式搜索文本，读写文件；\n- Python 交互模式可以轻松测试代码片段，也可以使用 IDLE 的集成开发环境；\n- 也可以轻松扩展用 C 或 C++ 编译出来的新模块；\n- 可以嵌入软件系统来提供编程接口；\n- 跨平台运行，包括 MacOS X，Windows，Linux 和 Unix，在安卓和 iOS 上也有非官方实现。", "metadata": {"chunk_type": "text", "title_level_1": "1 Python 简介", "title_level_2": "1.1 Python 的特点", "chunk_summary": "Python 语法优雅简洁，易于编写和阅读。它简化了原型开发和小型任务的实现，拥有庞大的标准库，支持交互模式和集成开发环境，可扩展性强，可嵌入软件系统，并支持跨平台运行。", "file_id": "test.md", "file_summary": "Python 是一种语法优雅简洁的编程语言，易于编写和阅读，简化原型开发和小型任务实现，并拥有强大的标准库和跨平台支持。它支持多种数据类型、面向对象编程，并提供高级特性如生成器和自动内存管理。Python的设计哲学强调可读性、显式性以及实用性，并持续进行版本更新，近期重要的发布节点包括2023年10月2日（Python 3.12.0 和 3.11.6）和 2023年8月24日，涵盖了 3.9 到 3.12 的系列版本。"}}
{"chunk_id": "test.md_3", "chunk_content": "- 多样的数据类型：数（浮点数、复数和无限长整数），字符串（ASCII 和 Unicode）及字典；\n- Python 通过类和多重继承来支持面向对象编程；\n- 代码可以用模块和包来组织；\n- 支持抛出和捕捉异常，用于干净的错误处理；\n- 数据是强类型、动态类型，不兼容数据操作会抛出异常（比如试图把字符串和数字加起来），这样能马上发现错误；\n- 包含生成器（generators）和列表操作（list comprehesions）这样的高级特性；\n- 自动管理内存，避免你在自己的代码里费心申请释放内存。", "metadata": {"chunk_type": "text", "title_level_1": "1 Python 简介", "title_level_2": "1.2 Python 的编程语言特性", "chunk_summary": "Python支持多种数据类型（包括数、字符串和字典），面向对象编程，模块化组织代码，异常处理，强类型动态类型检查，并提供生成器、列表操作等高级特性，以及自动内存管理。\n", "file_id": "test.md", "file_summary": "Python 是一种语法优雅简洁的编程语言，易于编写和阅读，简化原型开发和小型任务实现，并拥有强大的标准库和跨平台支持。它支持多种数据类型、面向对象编程，并提供高级特性如生成器和自动内存管理。Python的设计哲学强调可读性、显式性以及实用性，并持续进行版本更新，近期重要的发布节点包括2023年10月2日（Python 3.12.0 和 3.11.6）和 2023年8月24日，涵盖了 3.9 到 3.12 的系列版本。"}}
{"chunk_id": "test.md_4", "chunk_content": "Beautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than _right_ now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!", "metadata": {"chunk_type": "text", "title_level_1": "2 Python 之禅", "chunk_summary": "美胜于丑，显式胜于隐式，简单胜于复杂，复杂胜于过度复杂，扁平胜于嵌套，稀疏胜于密集，可读性至关重要，特殊情况不应破坏规则，实用性胜于纯粹性，错误不应悄无声息，除非明确屏蔽，在歧义面前，拒绝猜测，应该有一种且最好只有一种明显的方法，虽然这种方法可能一开始并不明显，现在胜于绝望，但绝望往往胜于现在，如果实现难以解释，则是一个糟糕的主意，如果实现容易解释，则可能是一个好主意，命名空间是一个好主意，我们应该多多采用。", "file_id": "test.md", "file_summary": "Python 是一种语法优雅简洁的编程语言，易于编写和阅读，简化原型开发和小型任务实现，并拥有强大的标准库和跨平台支持。它支持多种数据类型、面向对象编程，并提供高级特性如生成器和自动内存管理。Python的设计哲学强调可读性、显式性以及实用性，并持续进行版本更新，近期重要的发布节点包括2023年10月2日（Python 3.12.0 和 3.11.6）和 2023年8月24日，涵盖了 3.9 到 3.12 的系列版本。"}}
{"chunk_id": "test.md_5", "chunk_content": "<center>表 1 Python 的发版历史（部分）</center>\n<table><tr><td>发布版本</td><td>发布日期</td></tr><tr><td>Python 3.12.0</td><td>2023 年 10 月 2 日</td></tr><tr><td>Python 3.11.6</td><td>2023 年 10 月 2 日</td></tr><tr><td>Python 3.11.5</td><td>2023 年 8 月 24 日</td></tr><tr><td>Python 3.10.13</td><td>2023 年 8 月 24 日</td></tr><tr><td>Python 3.9.18</td><td>2023 年 8 月 24 日</td></tr></table>", "metadata": {"chunk_type": "table", "title_level_1": "3 Python 的发版历史", "chunk_summary": "该表格展示了 Python 的部分发版历史。2023 年 10 月 2 日同时发布了 Python 3.12.0 和 Python 3.11.6 版本，表明该日期是重要的发布节点。随后，Python 3.11.5、Python 3.10.13 和 Python 3.9.18 分别于 2023 年 8 月 24 日发布，这表明在 8 月 24 日也有重要的版本更新。从发布版本号来看，Python 3.12.0 是最新的主要版本，而其他版本则为较早的版本，涵盖了 3.9 到 3.12 的系列。", "file_id": "test.md", "file_summary": "Python 是一种语法优雅简洁的编程语言，易于编写和阅读，简化原型开发和小型任务实现，并拥有强大的标准库和跨平台支持。它支持多种数据类型、面向对象编程，并提供高级特性如生成器和自动内存管理。Python的设计哲学强调可读性、显式性以及实用性，并持续进行版本更新，近期重要的发布节点包括2023年10月2日（Python 3.12.0 和 3.11.6）和 2023年8月24日，涵盖了 3.9 到 3.12 的系列版本。"}}
